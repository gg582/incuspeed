{
  "swagger": "2.0",
  "info": {
    "description": "Linux Virtualization API with Incus.",
    "title": "Linux Virtualization API",
    "contact": {},
    "version": "1.0"
  },
  "host": "localhost:32000",
  "basePath": "/",
  "paths": {
    "/create": {
      "post": {
        "description": "Creates a new container with the provided information.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Create a new container",
        "parameters": [
          {
            "description": "Container creation request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/linux_virt_unit.ContainerInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Container Info",
            "schema": {
              "$ref": "#/definitions/linux_virt_unit.ContainerInfo"
            }
          }
        }
      }
    },
    "/delete": {
      "post": {
        "description": "Deletes a container with the specified tag.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Delete container by tag",
        "parameters": [
          {
            "description": "Tag to delete",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "Registers a new user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Register a new user",
        "parameters": [
          {
            "description": "User registration request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/linux_virt_unit.UserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Registration Done.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/request": {
      "post": {
        "description": "GetContainers retrieves a list of containers for a specific user by manually scanning the collection.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Get containers",
        "parameters": [
          {
            "description": "User information",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/linux_virt_unit.UserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created containers list",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/linux_virt_unit.ContainerInfo"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/upload": {
      "post": {
        "description": "Uploads a file to a container with the destination path specified in the \"X-File-Path\" header.\"",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "text/plain"
        ],
        "tags": [
          "upload"
        ],
        "summary": "Upload a file to a container",
        "parameters": [
          {
            "type": "string",
            "description": "Absolute file path inside the container (e.g., /home/user/file.txt)",
            "name": "X-File-Path",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Target container name",
            "name": "X-Container-Name",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Absolute file path inside the mobile client (e.g., /storage/emulated/0/Downloads",
            "name": "X-Host-Path",
            "in": "header",
            "required": true
          },
          {
            "type": "file",
            "description": "File to upload",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "202": {
            "description": "File '/absolute/path' queued for processing on container 'container_name'.",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Error message describing the reason (e.g., missing headers, invalid path)",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/start": {
      "post": {
        "description": "Start a container with the specified tag.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "body",
            "required": true,
            "description": "The tag of the container to start",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with log message",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Start container"
      }
    },
    "/stop": {
      "post": {
        "description": "Stop a container with the specified tag.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "body",
            "required": true,
            "description": "The tag of the container to stop",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with log message",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Stop container"
      }
    },
    "/pause": {
      "post": {
        "description": "Pause a container with the specified tag.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "body",
            "required": true,
            "description": "The tag of the container to pause",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with log message",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Pause container"
      }
    },
    "/restart": {
      "post": {
        "description": "Restart a container with the specified tag.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "body",
            "required": true,
            "description": "The tag of the container to restart",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with log message",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Restart container"
      }
    },
    "/resume": {
      "post": {
        "description": "Resume a paused container with the specified tag.",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "body",
            "required": true,
            "description": "The tag of the container to resume",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK with log message",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "summary": "Resume container"
      }
    }
  },
  "definitions": {
    "linux_virt_unit.ContainerInfo": {
      "type": "object",
      "properties": {
        "distro": {
          "type": "string",
          "example": "ubuntu"
        },
        "key": {
          "type": "string",
          "example": "encryptionKey"
        },
        "password": {
          "type": "string",
          "example": "encryptedPW"
        },
        "password_iv": {
          "type": "string",
          "example": "somePasswordIV"
        },
        "serverip": {
          "type": "string",
          "example": "10.72.1.100"
        },
        "serverport": {
          "type": "string",
          "example": "27020"
        },
        "tag": {
          "type": "string",
          "example": "sometag"
        },
        "username": {
          "type": "string",
          "example": "encryptedUser"
        },
        "username_iv": {
          "type": "string",
          "example": "someUsernameIV"
        },
        "version": {
          "type": "string",
          "example": "24.04"
        },
        "vmstatus": {
          "type": "string",
          "example": "running"
        }
      }
    },
    "linux_virt_unit.UserInfo": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "example": "encryptionKey"
        },
        "password": {
          "type": "string",
          "example": "passwordhash"
        },
        "username": {
          "type": "string",
          "example": "encryptedUser"
        },
        "username_iv": {
          "type": "string",
          "example": "someUsernameIV"
        }
      }
    }
  }
}
