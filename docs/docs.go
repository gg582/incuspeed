// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/create": {
            "post": {
                "description": "Creates a new container with the provided information.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new container",
                "parameters": [
                    {
                        "description": "Container creation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/linux_virt_unit.ContainerInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Container Info",
                        "schema": {
                            "$ref": "#/definitions/linux_virt_unit.ContainerInfo"
                        }
                    }
                }
            }
        },
        "/delete": {
            "post": {
                "description": "Deletes a container with the specified tag.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Delete container by tag",
                "parameters": [
                    {
                        "description": "Tag to delete",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Registers a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/linux_virt_unit.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Registration Done.",
                        "schema": {
                            "type": "body"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/request": {
            "post": {
                "description": "GetContainers retrieves a list of containers for a specific user by manually scanning the collection.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Get containers",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/linux_virt_unit.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created containers list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/linux_virt_unit.ContainerInfo"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "definitions": {
        "linux_virt_unit.ContainerInfo": {
            "type": "object",
            "properties": {
                "distro": {
                    "type": "string",
                    "example": "ubuntu"
                },
                "key": {
                    "type": "string",
                    "example": "encryptionKey"
                },
                "password": {
                    "type": "string",
                    "example": "encryptedPW"
                },
                "password_iv": {
                    "type": "string",
                    "example": "somePasswordIV"
                },
                "serverip": {
                    "type": "string",
                    "example": "10.72.1.100"
                },
                "serverport": {
                    "type": "string",
                    "example": "27020"
                },
                "tag": {
                    "type": "string",
                    "example": "sometag"
                },
                "username": {
                    "type": "string",
                    "example": "encryptedUser"
                },
                "username_iv": {
                    "type": "string",
                    "example": "someUsernameIV"
                },
                "version": {
                    "type": "string",
                    "example": "24.04"
                },
                "vmstatus": {
                    "type": "string",
                    "example": "running"
                }
            }
        },
        "linux_virt_unit.UserInfo": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "encryptionKey"
                },
                "password": {
                    "type": "string",
                    "example": "passwordhash"
                },
                "username": {
                    "type": "string",
                    "example": "encryptedUser"
                },
                "username_iv": {
                    "type": "string",
                    "example": "someUsernameIV"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:32000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Linux Virtualization API",
	Description:      "Linux Virtualization API with Incus.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
